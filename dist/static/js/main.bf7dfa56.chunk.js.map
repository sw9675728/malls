{"version":3,"sources":["serviceWorker.js","component/Styled/index.jsx","component/Home/index.jsx","component/User/index.jsx","component/User/Main.jsx","component/User/Info.jsx","component/Login/index.jsx","router.js","component/Notfound/index.jsx","index.js","utils.js"],"names":["Boolean","window","location","hostname","match","rotate","keyframes","Wrap","styled","div","Thing","TomatoButton","ReversedButton","props","console","log","children","split","reverse","Link","className","StyledLink","Home","Component","to","User","this","routes","Main","query","JSON","parse","Info","obj","params","tailLayout","wrapperCol","offset","span","Login","onFinish","values","utils","storage","set","replace","onFinishFailed","errorInfo","src","alt","name","initialValues","remember","bind","Item","rules","required","message","placeholder","Password","valuePropName","type","htmlType","size","path","component","exact","userInfo","util","get","ReactDOM","render","map","item","index","key","from","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","value","localStorage","setItem","stringify","getItem","remove","removeItem","module","exports"],"mappings":"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","file":"static/js/main.bf7dfa56.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\nimport styled,{keyframes} from 'styled-components'\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\nconst Wrap = styled.div`\n  font-size:30px;\n  color:blue;\n  widt:100%;\n    &{\n        animation: ${rotate} 2s linear infinite;\n\n    }\n  ::before{\n      content:'!!!'\n  }\n  h1{\n      color:green;\n      font-size:12px;\n  }\n  .mains{\n      width:100px;\n      height:100px;\n      background-color:gray;\n      border:2px solid #000;\n      border-raduis:4px;\n  }\n`;\nconst Thing = styled.div`\n/*&符号表示引用主组件，注意体会加上&符号与不加的区别：*/\n\n\n    /* 应用于className为blue的Thing组件 */\n    &.blue{\n    color: blue;\n    }\n\n    /* 应用于className为red的Thing组件里的所有子组件或者html标签 */\n    .red {\n    color: red;\n    }\n\n\n    /* 应用于紧邻Thing组件的下一个Thing组件 */\n    & + & {\n    color: green;\n    }\n`;\n\n\nconst TomatoButton = styled(Wrap)`\n  color:red;\n`\nconst ReversedButton = props => {\n    console.log(props)\n    return <button {...props} children={props.children.split('').reverse()} />\n}\n\n\n// 下面是给 react-router-dom  Link 组件添加样式的示例\nconst Link = ({ className, children }) => (\n    <a className={className}>\n      {children}\n    </a>\n  );\n  \n  const StyledLink = styled(Link)`\n    color: palevioletred;\n    font-weight: bold;\n  `;\nclass Styleds extends Component {\n    render() {\n        return <div>\n            <Wrap primary='red'>\n                <h1>你好 我是绿色</h1>\n                <div className='mains'></div>\n            </Wrap>\n            <TomatoButton >样式继承</TomatoButton>\n            <TomatoButton as={ReversedButton}>my name is msw</TomatoButton>\n            <Thing className=\"blue\" as='a' href='https://www.baidu.com'>\n                <p className=''>Thing组件</p>\n            </Thing>\n            <Thing>\n            <p className=\"red\" >p标签</p>\n            </Thing>\n            <Thing>\n            <p >p标签</p>\n            </Thing>\n        <br/><br/>\n            <Link>Unstyled, boring Link</Link>\n    <br />\n    <StyledLink>Styled, exciting Link</StyledLink>\n        </div>\n    }\n}\n\nexport default Styleds","import React, { Component } from 'react';\nimport './index.less';\nimport styled from 'styled-components'\nimport { Button } from 'antd';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Styleds from './../Styled/index.jsx'\n\nclass Home extends Component {\n  render() {\n    return (\n        <header>\n          <Link to='user'>user</Link>\n            <div className='title'>首页头部标题</div>\n            {/* <Styleds/> */}\n        </header>\n    )\n  }\n}\nexport default Home;\n","import React, { Component } from 'react';\n// import { Route, Redirect, Switch, Link } from 'react-router-dom'\n\nclass User extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let { match, routes } = this.props;\n        console.log(this.props)\n        let obj1 = {\n            name:'msw',\n            age:23\n        }\n        let gerInfo = {\n            work:'It',\n            gongsi:'联拓'\n        }\n        return (\n            <div>\n                <div className=\"content\">\n                    <div className=\"left\">\n                        <h1>user</h1>\n                    </div>\n                    <div className=\"right\">\n                    {/* <Switch>\n                        {routes.map((route, key) => {\n                            return (\n                                <Route\n                                    key={key}\n                                    path={route.path}\n                                    render={prop => (\n                                        // pass the sub-routes down to keep nesting\n                                        <route.component {...prop} routes={route.routes} />\n                                    )}\n                                />\n\n                            );\n                        })}\n                        </Switch> */}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default User;","import React, { Component } from 'react';\nclass Main extends Component {\n    render() {\n      console.log(this.props)\n      let {query} = this.props.location;\n      if(query)console.log(JSON.parse(query));\n      \n      return (\n        <div>\n          <h1>Main</h1>\n        </div>\n      )\n    }\n  }\n  export default Main;\n  ","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nclass Info extends Component {\n  render() {\n    let { match, routes } = this.props;\n    let obj =  JSON.parse(match.params.obj);\n    console.log(obj)\n    return (\n      <div>\n        <h1>Info</h1>\n      </div>\n    )\n  }\n}\nexport default Info;\n","import React, { Component } from 'react';\nimport './index.less';\nimport { Form, Input, Button, Checkbox ,Alert} from 'antd';\nimport utils from './../../utils'\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 10 },\n};\nconst tailLayout = {\n    wrapperCol: { offset: 4, span: 16 },\n};\nclass Login extends Component {\n    onFinish = values => {\n        utils.storage.set(\"userInfo\",values)\n        // this.props.history.push('/')\n        console.log(this)\n        // window.location.href='/'\n        window.location.replace(\"/\")\n        // this.props.history.replace(\"/\");\n\n\n    }\n    onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n    render() {\n        return (\n            <div>\n                <div className='Login'>\n                    <img src=\"http://testclubshop.liantuobank.com/assets/images/login_b.jpg\" alt=\"\" className='logo' />\n                    <div className='Login-form'>\n                        <div className='Login-form-main'>\n                            <h2 className='postTitle'>商户登陆</h2>\n\n                            <Form\n                                name=\"basic\"\n                                initialValues={{ remember: true }}\n                                onFinish={this.onFinish.bind(this)}\n                                onFinishFailed={this.onFinishFailed.bind(this)}\n                            >\n                                <Form.Item\n                                    name=\"username\"\n                                    rules={[{ required: true, message: '请填写账号!' }]}\n                                    className='inputs'\n                                >\n                                    <Input placeholder='账号' className='inputs' />\n                                </Form.Item>\n\n                                <Form.Item\n                                    name=\"password\"\n                                    rules={[{ required: true, message: '请输入密码!' }]}\n                                    className='inputs'\n                                >\n                                    <Input.Password placeholder='密码'/>\n                                </Form.Item>\n\n                                <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n                                    <Checkbox>记住账号</Checkbox>\n                                </Form.Item>\n\n                                <Form.Item {...tailLayout} className='submitbtn'>\n                                    <Button type=\"primary\" htmlType=\"submit\" size='large'>\n                                        登录\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Login;\n","import Home from './component/Home/index.jsx';\nimport User from './component/User/index.jsx';\nimport Main from './component/User/Main.jsx';\nimport Info from './component/User/Info.jsx';\nimport Login from './component/Login/index.jsx';\nimport Notfound from './component/Notfound/index.jsx';\n\n\n\nlet routes = [\n    {\n        path: '/',//首页默认加载的页面\n        component: Home,\n        exact: true //是否为严格模式\n    },\n    {\n        path: '/user',\n        component: User,\n        routes: [  /** 嵌套路由  User下面又有两个子页面*/\n            {\n                path: '/user/ger',\n                component: Main,\n            },\n            {\n                path: '/user/info/:obj',\n                component: Info\n            }\n        ]\n    },\n    {\n        path: '/Login',//首页默认加载的页面\n        component: Login,\n        exact:true\n    },\n    {\n        path:'*',\n        component:Notfound,\n        exact:true\n    }\n];\n\nexport default routes;","import React, { Component } from 'react';\nimport './index.less'\nclass Notfound extends Component {\n    render() {\n        return <div className=\"ex-main\">\n            <div className=\"ex-page-content text-center\">\n                <div className=\"text-error\">\n                    <span className=\"text-primary\">4</span>\n                    <span className=\"text-pink\">0</span>\n                    <span className=\"text-info\">4</span>\n                </div>\n            </div>\n            <h2>访问的页面不存在</h2><br />\n            <p className=\"text-muted\">非法的访问请求，请确保正确的请求URL </p>\n            <br />\n        </div>\n    }\n}\n\nexport default Notfound;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route, Link, Redirect, Switch } from \"react-router-dom\";\nimport routes from './router';\nimport util from './utils'\nimport Login from './component/Login/index.jsx'\nconst userInfo = util.storage.get(\"userInfo\")\n\nReactDOM.render(\n  (\n    <Router >\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/login\" component={Login} />\n          {\n            routes.map((item, index) => {\n              return <Route key={index} path={item.path} exact={item.exact} render={props => {\n                  return userInfo ? <item.component {...props} /> :  <Redirect to='/login'from='/'/>\n                }\n              }/>\n            })\n          }\n        </Switch>\n      </div>\n    </Router>\n  ),\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();"," var storage = {\n\n    set(key, value) {\n        localStorage.setItem(key, JSON.stringify(value))\n    },\n    get(key) {\n        return JSON.parse(localStorage.getItem(key))\n    },\n    remove(key) {\n        localStorage.removeItem(key)\n    }\n}\n\nmodule.exports={\n    storage\n}"],"sourceRoot":""}